version: '3.8'

services:
  app:
    container_name: todo-app
    build:
      context: .  # Dockerfile va boshqa fayllar joriy papkada.
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    networks:
      - todo_network
    ports:
      - "8008:8000"
    depends_on:
      - db
      - redis
      - celery
    restart: unless-stopped

  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_DB: todo_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 088088
    volumes:
      - todo_db_volume:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - todo_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready -U postgres && psql -U postgres -d todo_db -c 'SELECT 1'" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  redis:
    container_name: redis
    image: redis
    ports:
      - "6378:6379"
    networks:
      - todo_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  celery:
    container_name: todo_celery
    build:
      context: .  # Dockerfile va boshqa fayllar joriy papkada.
    command: celery -A core worker --loglevel=info
    depends_on:
      - redis
      - db
    volumes:
      - .:/app
    networks:
      - todo_network
    restart: unless-stopped

  celery-beat:
    container_name: todo_celery_beat
    build:
      context: .  # Dockerfile va boshqa fayllar joriy papkada.
    command: celery -A core beat --loglevel=info
    depends_on:
       - redis
       - db
    volumes:
      - .:/app
    networks:
      - todo_network
    restart: unless-stopped

  migrate:
    container_name: todo_migrate
    build:
      context: .
    command: python manage.py migrate
    depends_on:
      - db
    volumes:
      - .:/app
    networks:
      - todo_network
    restart: "no"

networks:
  todo_network:
    driver: bridge

volumes:
  todo_db_volume:
